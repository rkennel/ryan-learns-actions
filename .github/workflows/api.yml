# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: API Build and Test

on:
  push:
    branches: [ "main" ]
    paths:
      - 'api/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'api/**'
  workflow_dispatch:

jobs:

  build:
    name: Build and Test Application
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache-dependency-path: ./api/go.sum

    - name: Build
      working-directory: ./api
      run: go build -v ./...

    - name: Test
      working-directory: ./api
      run: go test -v ./...
  
  # Push Docker image to Google Artifact Registry
  # https://gist.github.com/palewire/12c4b2b974ef735d22da7493cf7f4d37
  docker-release:
    name: Tagged Docker release to Google Artifact Registry
    runs-on: ubuntu-latest
    needs: build

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v3

      - id: auth
        name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          workload_identity_provider: projects/1001778027632/locations/global/workloadIdentityPools/big-workload-identity-pool/providers/bigwig-provider
          service_account: bigwig-service-account@bigwig-399216.iam.gserviceaccount.com
          access_token_lifetime: 300s

      - name: Login to Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: us-central1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - id: docker-push-tagged
        name: Tag Docker image and push to Google Artifact Registry
        uses: docker/build-push-action@v5
        with:
          context: ./api
          push: true
          tags: |
            us-central1-docker.pkg.dev/bigwig-399216/bigwig-repository/bigwig-api:latest
  
  # Deploy to Cloud Run
  # https://github.com/marketplace/actions/deploy-to-cloud-run
#  deploy-to-cloud-run:
#    name: Deploys container to cloud run
#    runs-on: ubuntu-latest
#    needs: docker-release
#
#    permissions:
#      contents: 'read'
#      id-token: 'write'
#
#    steps:
#    - uses: 'actions/checkout@v3'
#
#    - uses: 'google-github-actions/auth@v1'
#      with:
#        token_format: access_token
#        workload_identity_provider: projects/1001778027632/locations/global/workloadIdentityPools/big-workload-identity-pool/providers/bigwig-provider
#        service_account: bigwig-service-account@bigwig-399216.iam.gserviceaccount.com
#        access_token_lifetime: 300s
#
#    - id: 'deploy'
#      uses: 'google-github-actions/deploy-cloudrun@v1'
#      with:
#        service: 'bigwig-api'
#        image: 'us-central1-docker.pkg.dev/bigwig-399216/bigwig-repository/bigwig-api'
#
#    - name: 'Use output'
#      run: 'curl "${{ steps.deploy.outputs.url }}"'